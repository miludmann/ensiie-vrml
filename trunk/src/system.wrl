#VRML V2.0 utf8

## Protos
EXTERNPROTO Avoidance [
   eventIn      SFTime     updateRequest
	eventIn      SFVec3f    set_goal
   eventIn      SFString   set_state
	eventIn      MFNode     set_obstacles
	field        SFVec3f    goal 
   field        SFFloat    goalPriority 
	field        SFFloat    speed 
   field        SFString   state 
	field        MFNode     obstacles 
	exposedField SFVec3f    position 
   exposedField MFNode     children 
] "../protos/AvoidObstaclesPROTO.wrl"

EXTERNPROTO Copy [ 
                    field SFInt32    copies           
                    field SFVec3f    center           
                    field SFVec3f    translation      
                    field SFVec3f    scale            
                    field SFRotation scaleOrientation 
                    field SFRotation rotation         
                    field MFNode     children         
                   ] "../protos/CopyPROTO.wrl"


DEF EarthTs TimeSensor {
	cycleInterval 20
	loop TRUE
}

DEF AntaeusTs TimeSensor {
	cycleInterval 1600
	loop TRUE
}

DEF Ceinture_asteroidesTs TimeSensor {
	cycleInterval 100
	loop TRUE
}

PROTO ObstacleExodus [
   exposedField SFVec3f position 0 0 0
   exposedField SFFloat repulsion 4
   field        SFFloat radius 0
]
{
DEF _Exodus Transform {
	translation 0 0 0
	scale 5 5 5
			children [
				Inline { url "exodus.wrl" },
				
			]
		}
}
DEF	Exodus ObstacleExodus { position 0 0 0 radius 200 repulsion 200000000 }

DEF Earth Transform {
	translation 0 0 0
	scale 1.5 1.5 1.5
			children [
				Inline { url "earth.wrl" },
				
			]
		}

DEF EarthPi OrientationInterpolator {
	key [ 0 .5 1 ]
	keyValue [ 0 1 0 3.14, 0 1 0 6.28, 0 1 0 9.42,  ]
}

ROUTE EarthTs.fraction_changed TO EarthPi.set_fraction
ROUTE EarthPi.value_changed TO Earth.rotation

DEF Antaeus Transform {
	translation 0 0 0
	scale 1 1 1
			children [
				Inline { url "antaeus.wrl" },
				
			]
		}

DEF AntaeusPi OrientationInterpolator {
	key [ 0 .5 1 ]
	keyValue [ 0 1 0 3.14, 0 1 0 6.28, 0 1 0 9.42,  ]
}

ROUTE AntaeusTs.fraction_changed TO AntaeusPi.set_fraction
ROUTE AntaeusPi.value_changed TO Antaeus.rotation



PROTO ObstacleAcheron [
   exposedField SFVec3f position 0 0 0
   exposedField SFRotation rotation 0 0 0 0
   exposedField SFFloat repulsion 4
   field        SFFloat radius 0
]
{
}
DEF _Acheron Transform {
	translation 0 0 0
	scale 1 1 1
			children [
				Inline { url "acheron.wrl" },
				
			]
		}

DEF AcheronTs TimeSensor {
	cycleInterval 120
	loop TRUE
}

DEF AcheronOi OrientationInterpolator {
	key [ 0 .5 1 ]
	keyValue [ 0 1 0 3.14, 0 1 0 6.28, 0 1 0 9.42,  ]
}

ROUTE AcheronTs.fraction_changed TO AcheronOi.set_fraction
ROUTE AcheronOi.value_changed TO _Acheron.rotation

DEF	Acheron ObstacleAcheron { position 9000 0 0 radius 1000 repulsion 200000000 }


DEF SAcheron Script { 
   eventIn  SFRotation set_pos
   field    SFNode  g USE Acheron
   eventOut SFVec3f goal_changed
   url ["javascript:
      function set_pos(rot) {
		 //parent.vrmlframe.document.write('bla');
		 /* 
		 if(rot.angle > 6.28)
		 {
		 goal_changed = new SFVec3f(9000*Math.cos(rot.angle), 0, (-1)*9000*Math.sin(rot.angle));
		 } else {
		 goal_changed = new SFVec3f(9000*Math.cos(rot.angle), 0, (1)*9000*Math.sin(rot.angle));
		 }
		  */
		 goal_changed = new SFVec3f(9000*Math.cos(rot.angle), 0, (9000*Math.sin(rot.angle)));

      }
      "]
}

ROUTE AcheronOi.value_changed TO SAcheron.set_pos
ROUTE SAcheron.goal_changed	TO Acheron.position


#ROUTE TIME.time TO A.updateRequest
#ROUTE PS.translation_changed TO GOAL.set_translation
#ROUTE PS.translation_changed TO S.set_pos
#ROUTE S.goal_changed TO A.set_goal




DEF Ceinture_asteroides_H Transform {
	children [
		Copy {
		   copies 10
		   center 0 0 0
		   translation 1 0 0
		   rotation 0 1 0 0.45
		   scale 1 1 1
		   children [
    		  Transform {
				 translation -30 50 -10
				 children [
	    			Inline { url [ "asteroide.wrl" ] }
				   ]
    			  }
    		 ]
	 }
	]
}

DEF Ceinture_asteroidesPi OrientationInterpolator {
	key [ 0 .5 1 ]
	keyValue [ 0 1 0 3.14, 0 1 0 6.28, 0 1 0 9.42,  ]
}

ROUTE Ceinture_asteroidesTs.fraction_changed TO Ceinture_asteroidesPi.set_fraction
ROUTE Ceinture_asteroidesPi.value_changed TO Ceinture_asteroides_H.rotation

DEF Ceinture_asteroides_B Transform {
	children [
		Copy {
		   copies 10
		   center 0 0 0
		   translation 1 0 0
		   rotation 0 1 0 0.45
		   scale 1 1 1
		   children [
    		  Transform {
				 translation 0 -100 0
				 rotation 0 1 0 0.3
				 children [
	    			Inline { url [ "asteroide.wrl" ] }
				   ]
    			  }
    		 ]
	 }
	]
}

ROUTE Ceinture_asteroidesPi.value_changed TO Ceinture_asteroides_B.rotation

DEF TheseusTs TimeSensor {
	cycleInterval 300
	loop TRUE
}

DEF Theseus Transform {
	translation 0 0 0
	scale 0.9 0.9 0.9
			children [
				Inline { url "theseus.wrl" },
				
			]
		}

DEF TheseusPi OrientationInterpolator {
	key [ 0 .5 1 ]
	keyValue [ 0 1 0 3.14, 0 1 0 6.28, 0 1 0 9.42,  ]
}

ROUTE TheseusTs.fraction_changed TO TheseusPi.set_fraction
ROUTE TheseusPi.value_changed TO Theseus.rotation



DEF ErebusTs TimeSensor {
	cycleInterval 970
	loop TRUE
}

DEF Erebus Transform {
	translation 0 0 0
	scale 1 1 1
			children [
				Inline { url "erebus.wrl" },
				
			]
		}

DEF ErebusPi OrientationInterpolator {
	key [ 0 .5 1 ]
	keyValue [ 0 0 1 3.14, 0 0 1 6.28, 0 0 1 9.42,  ]
}

ROUTE ErebusTs.fraction_changed TO ErebusPi.set_fraction
ROUTE ErebusPi.value_changed TO Erebus.rotation



##################################################################################################
# Traitement du vaisseau déplaçable et de ses collisions
PROTO Obstacle [
   exposedField SFVec3f position 0 0 0
   exposedField SFFloat repulsion 4
   field        SFFloat radius 4
]
{
   Transform {
      translation IS position
      children [
         Shape {
            appearance Appearance {
               material Material { emissiveColor 1 0 0 transparency .6 }
            }
            geometry Sphere { radius IS radius }
         }
      ]
   }
}

# Cible déplaçable à atteindre
Transform {
   rotation 1 0 0 -1.57
   children [ ## in here its the XY plane, to match PlaneSensor
      DEF GOAL Transform {
         translation -5000 0 0
         children [
            Transform {
               translation 0 0 -.25
               scale 250 250 1
               children [
                  DEF CORNER Shape {
                     geometry IndexedLineSet {
                        coord Coordinate { point [ -.5 -.25 0, -.5 -.5 0, -.25 -.5 0 ] }
                        coordIndex [ 0 1 2 -1 ]
                        color Color { color [ 0 1 .4 ] }
                        colorIndex [ 0 0 0 -1 ]
                     }
                  }
                  Transform {
                     rotation 0 0 1 1.57
                     children [ USE CORNER ]
                  }
                  Transform {
                     rotation 0 0 1 -1.57
                     children [ USE CORNER ]
                  }
                  Transform {
                     rotation 0 0 1 3.1415
                     children [ USE CORNER ]
                  }
               ]
            }
         ]
      }
   ]
}
# Sol virtuel
Transform {
   translation 0 -1 0
   rotation 0 0 0 -1.57
   children [ ## in here its the XY plane, to match PlaneSensor
      DEF PS PlaneSensor {}
      Shape {
         appearance Appearance {
            material Material { diffuseColor .4 .4 .4
								transparency 0.95 }
         }
         geometry Cylinder { height 1 radius 13000 }
      }
   ]
}

DEF A Avoidance {
   position 5000 0 0
   goal     -5000 0 0
   speed    1200
   obstacles [
      USE Exodus
	  USE Acheron
   ]
   children  [ 
	   Transform {
		   scale 100 100 100
		   rotation	0 0 0 -1.57
		   children [
				Inline { url [ "ovni.wrl" ] }
			]	
		}

   ]
}

DEF S Script { 
   eventIn  SFVec3f set_pos
   field    SFNode  g USE GOAL
   field    SFNode  p USE PS
   field    SFVec3f offset 0 0 0
   eventOut SFVec3f goal_changed
   url ["javascript:
      function set_pos(pos) {
         var mv = offset.add(pos);
         goal_changed = new SFVec3f(mv.x, 0, -mv.y);
      }
      function initialize() {
         p.set_offset = g.translation;
         set_pos(g.translation);
      }
      "]
}

DEF TIME TimeSensor { cycleInterval 10 loop TRUE }

ROUTE TIME.time TO A.updateRequest
ROUTE PS.translation_changed TO GOAL.set_translation
ROUTE PS.translation_changed TO S.set_pos
ROUTE S.goal_changed TO A.set_goal

